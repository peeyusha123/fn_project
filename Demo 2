create or replace PROCEDURE "PROC_MERGE_PROJ_FIELDS"(jsonData IN CLOB,userId IN VARCHAR2)
AS
siteProjectsId NUMBER;
json_obj json_object_t;
v_keys json_key_list;
v_keysList VARCHAR(32767);
v_columns CLOB;
v_update_stmt CLOB;
v_insert_stmt CLOB;
v_values_stmt CLOB;
v_select_stmt CLOB;
v_qryStatement CLOB;
v_query CLOB;
v_projectid VARCHAR2(32);
scheduled NUMBER(16,0);
isLocked VARCHAR(64);
v_microwaveCompletedDate VARCHAR(32);
BEGIN
	v_query := 'SELECT SITE_PROJECTS_ID FROM  json_table( ' || '''' || jsonData || '''' || ' , ''$[*]'' COLUMNS (SITE_PROJECTS_ID PATH ''$.SITE_PROJECTS_ID''))';
    
    DBMS_OUTPUT.PUT_LINE(v_query);
    
    EXECUTE IMMEDIATE v_query INTO siteProjectsId;
    json_obj := json_object_t.parse(jsonData);
	v_keys := json_obj.get_keys;
    v_keysList := NULL;
	FOR i in 1 .. v_keys.count loop
		IF( v_keysList is null) THEN
			v_keysList :=  v_keys(i);
		ELSE
			v_keysList := v_keysList ||','||v_keys(i);
		END IF;
	END LOOP;
	DBMS_OUTPUT.PUT_LINE('v_keysList');
	DBMS_OUTPUT.PUT_LINE(v_keysList);
    FOR M IN(SELECT DISTINCT TABLE_NAME,TYPE
	     FROM FUZE_TRACKER_FIELD_CONFIG
	     WHERE FIELD_NAME in ( select regexp_substr(v_keysList,'[^,]+', 1, level) from dual
								connect by regexp_substr(v_keysList, '[^,]+', 1, level) is not null)
	     AND MODULE IN ('SPM','SPM_ST','TRANSPORT','SPM_FD','SPM_PTT','SPM_PEE','SPM_HUB','SPM_PPD','SPM_PD','SPM_PPC','SPM_PC','SPM_PMM','SPM_PMD','SPM_EXT','SPM_PAP')
	     ORDER BY TABLE_NAME DESC) LOOP
	DBMS_OUTPUT.PUT_LINE('table');
		DBMS_OUTPUT.PUT_LINE(M.TABLE_NAME);
	DBMS_OUTPUT.PUT_LINE('type');
		DBMS_OUTPUT.PUT_LINE(M.TYPE);
	IF(M.TABLE_NAME is not null) THEN
	    SELECT CONCAT('SITE_PROJECTS_ID' || ' PATH ''' || '$.SITE_PROJECTS_ID' || ''',',COLUMNS_DATA_VAL),UPDATE_COLUMNS_DATA,SELECT_COLUMNS_DATA,INSERT_COLUMNS_DATA,VALUES_COLUMNS_DATA
	    INTO v_columns,v_update_stmt,v_select_stmt,v_insert_stmt,v_values_stmt
	    FROM (SELECT dbms_xmlgen.convert(RTRIM(XMLAGG(XMLELEMENT(E,COLUMNS_DATA)).EXTRACT('E/text()').getCLOBVal(),','),1) AS COLUMNS_DATA_VAL,
		 dbms_xmlgen.convert(RTRIM(XMLAGG(XMLELEMENT(E,UPDATE_COLUMNS_DATA)).EXTRACT('E/text()').getCLOBVal(),','),1) AS UPDATE_COLUMNS_DATA,
		 dbms_xmlgen.convert(RTRIM(XMLAGG(XMLELEMENT(E,SELECT_COLUMNS_DATA)).EXTRACT('E/text()').getCLOBVal(),','),1) AS SELECT_COLUMNS_DATA,
		 dbms_xmlgen.convert(RTRIM(XMLAGG(XMLELEMENT(E,SOURCE_TAB_COLUMN,',')).EXTRACT('E/text()').getCLOBVal(),','),1) AS INSERT_COLUMNS_DATA,
		 dbms_xmlgen.convert(RTRIM(XMLAGG(XMLELEMENT(E,'P.'||SOURCE_TAB_COLUMN,',')).EXTRACT('E/text()').getCLOBVal(),','),1) AS VALUES_COLUMNS_DATA
		 FROM (SELECT SOURCE_TAB_COLUMN,(SOURCE_TAB_COLUMN || ' PATH '|| ''''|| '$.' || SOURCE_TAB_COLUMN) || ''''||',' AS COLUMNS_DATA,
		 CASE WHEN TYPE = 'DATE' AND FORECAST_REQD = 'true' THEN 'CASE WHEN '|| SOURCE_TAB_COLUMN || ' IS JSON THEN TO_CHAR(TO_DATE(JSON_VALUE(TO_CLOB(' || SOURCE_TAB_COLUMN || '),''$.forecastDate''),''MM/DD/rr''),''MM/DD/yyyy'') ELSE TO_CHAR(TO_DATE('|| SOURCE_TAB_COLUMN ||',''MM/DD/rr''),''MM/DD/yyyy'') END AS ' || SOURCE_TAB_COLUMN
		      WHEN TYPE = 'DATE' AND FORECAST_REQD IS NULL THEN 'TO_CHAR(TO_DATE(' || SOURCE_TAB_COLUMN || ',''MM/DD/rr''),''MM/DD/yyyy'') AS ' || SOURCE_TAB_COLUMN
        --    WHEN TYPE = 'CONVERTED_DATE' AND FORECAST_REQD = 'true' THEN 'CASE WHEN '|| SOURCE_TAB_COLUMN || ' IS JSON THEN TO_DATE(JSON_VALUE(TO_CLOB(' || SOURCE_TAB_COLUMN || '),''$.forecastDate''),''MM/DD/rr'') ELSE TO_DATE('|| SOURCE_TAB_COLUMN ||',''MM/DD/rr'') END AS ' || SOURCE_TAB_COLUMN
              WHEN TYPE = 'CONVERTED_DATE'  THEN 'TO_DATE(' || SOURCE_TAB_COLUMN || ',''MM/DD/rr'') AS ' || SOURCE_TAB_COLUMN
		      ELSE SOURCE_TAB_COLUMN END || ',' AS SELECT_COLUMNS_DATA,
		 (SOURCE_TAB_COLUMN || ' = '|| 'P.' || SOURCE_TAB_COLUMN) || ',' AS UPDATE_COLUMNS_DATA
		 FROM FUZE_TRACKER_FIELD_CONFIG
		 WHERE TABLE_NAME = M.TABLE_NAME
		 AND TYPE = M.TYPE
		 AND FIELD_NAME in (select regexp_substr(v_keysList,'[^,]+', 1, level) from dual
				    connect by regexp_substr(v_keysList, '[^,]+', 1, level) is not null )
				 AND FIELD_NAME not in ('PSLC_APPROVAL_STATUS','PSLC_RECEIVED_DT','PSLC_LOCATION_PHASE')));
		DBMS_OUTPUT.PUT_LINE('v_columns line 64');
		DBMS_OUTPUT.PUT_LINE(v_columns);
		IF(v_columns IS NOT NULL) THEN
		IF (M.TABLE_NAME = 'SPM_PROJECT_TRACKER') THEN
		    v_projectid := 'FUZE_PROJECT_ID';
		ELSE
		    v_projectid := 'SITE_PROJECTS_ID';
		END IF;




		IF(M.TABLE_NAME in ('PROJ_ST_FIELDS_DATA','SPM_PROJECT_TRACKER','PROJ_TRANSPORT_ATTRIBUTES')) THEN
		     v_qryStatement := 'BEGIN
					FOR P IN(SELECT SITE_PROJECTS_ID,'||v_select_stmt||','''||userId||''' AS LAST_MODIFIED_BY
					   FROM  json_table(' || '''' || jsonData || '''' || ', ''$[*]'' COLUMNS('|| v_columns || '))
					   )
					   LOOP
					   UPDATE '||M.TABLE_NAME||'
					   SET
					   ' || v_update_stmt || ',LAST_MODIFIED_BY = P.LAST_MODIFIED_BY,LAST_MODIFIED_DATE = SYSDATE
					   WHERE '||v_projectid||' = P.SITE_PROJECTS_ID;
					   END LOOP;
					   END;'
					   ;
                       DBMS_OUTPUT.put_line('v_qryStatement line 89');
                       DBMS_OUTPUT.put_line(v_qryStatement);

--         PROC_UPDATE_TRANSPORT_MILESTONE_DATES(siteProjectsId,'TRANSPORT_CONTRACT','COMPLETED',userId);
--         PROC_UPDATE_TRANSPORT_MILESTONE_DATES(siteProjectsId,'TRANSPORT_DELIVERY','COMPLETED',userId);

		ELSE
		    v_qryStatement := 'DECLARE
				       v_rowcount NUMBER DEFAULT 0;
				       BEGIN
				       FOR P IN(SELECT SITE_PROJECTS_ID,'||v_select_stmt||','''||userId||''' AS LAST_MODIFIED_BY
				       FROM  json_table( ' || '''' || jsonData || '''' || ', ''$[*]'' COLUMNS('|| v_columns || ')))
				       LOOP
										UPDATE ' || M.TABLE_NAME || ' SP
										SET ' || v_update_stmt || ',
										LAST_MODIFIED_BY = P.LAST_MODIFIED_BY,LAST_MODIFIED_DATE = SYSDATE
				       WHERE P.SITE_PROJECTS_ID = SP.'||v_projectid||';
				       v_rowcount := SQL%rowcount;
				       IF(v_rowcount = 0) THEN
				       BEGIN
					    INSERT INTO ' || M.TABLE_NAME || '('||v_projectid||','||v_insert_stmt||',LAST_MODIFIED_BY,LAST_MODIFIED_DATE)
					    VALUES(P.SITE_PROJECTS_ID,'||v_values_stmt||',P.LAST_MODIFIED_BY,SYSDATE);
				       END;
				       v_rowcount := 0;
				       END IF;
				       END LOOP;
				       END;';

		END IF;
			DBMS_OUTPUT.PUT_LINE('v_qryStatement line 118');
			DBMS_OUTPUT.PUT_LINE(v_qryStatement);
			BEGIN
			    EXECUTE IMMEDIATE v_qryStatement;
                DBMS_OUTPUT.PUT_LINE('Query Executed ....');
			    COMMIT;
			EXCEPTION
			    WHEN OTHERS
			    THEN dbms_output.put_line('table save error');
			    DBMS_OUTPUT.PUT_LINE(SQLCODE);
			END;
		    END IF;
	END IF;
    END LOOP;

    -- forecast
    FOR N IN(SELECT FIELD_NAME
	     FROM FUZE_TRACKER_FIELD_CONFIG
	     WHERE MODULE IN ('SPM','SPM_ST','TRANSPORT','SPM_FD','SPM_PTT','SPM_PEE','SPM_HUB','SPM_PPD','SPM_PD','SPM_PPC','SPM_PC','SPM_PMM','SPM_PMD','SPM_EXT','SPM_PAP')
	     AND FORECAST_REQD = 'true'
	     AND FIELD_NAME in ( select regexp_substr(v_keysList,'[^,]+', 1, level) from dual
				 connect by regexp_substr(v_keysList, '[^,]+', 1, level) is not null ))LOOP


	EXECUTE IMMEDIATE 'SELECT CASE WHEN JSON_VALUE('''||jsonData||''',''$.' || N.FIELD_NAME || ''') IS JSON THEN JSON_VALUE(JSON_VALUE('''||jsonData||''',''$.' || N.FIELD_NAME || '''),''$.isLocked'') ELSE NULL END from dual' into isLocked;

	scheduled := 0;

	SELECT COUNT(*) into scheduled
	FROM PROJ_TRACKER_FORECAST_LOCKS PT
	INNER JOIN PROJ_AUTO_FORECAST_TEMPLATE_RULES PR ON PR.TEMPLATE_ID = PT.TEMPLATE_ID AND PR.FUZE_TRACKER_CONFIG_FIELD = N.FIELD_NAME
	WHERE SITE_PROJECTS_ID = siteProjectsId
	AND PR.SCHEDULE = 'Y';

	IF(scheduled > 0) THEN
	    IF(isLocked IS NULL) THEN
		isLocked := 'true';
	    END IF;
		ELSE
			isLocked := null;
	END IF;

	v_qryStatement := 'DECLARE
			   v_rowcount NUMBER DEFAULT 0;
			   BEGIN
			   FOR AX IN(SELECT '||siteProjectsId||' AS  SITE_PROJECTS_ID,'''||userId||''' AS LAST_MODIFIED_BY,'''||isLocked||''' AS '||N.FIELD_NAME||'
			   FROM DUAL)
			   LOOP
			     UPDATE PROJ_TRACKER_FORECAST_LOCKS PT
			     SET
			     PT.'||N.FIELD_NAME||'=AX.'||N.FIELD_NAME||',
			     LAST_MODIFIED_BY = AX.LAST_MODIFIED_BY,LAST_MODIFIED_DATE = SYSDATE
			   WHERE AX.SITE_PROJECTS_ID = PT.SITE_PROJECTS_ID;
			   v_rowcount := SQL%rowcount;
			   IF(v_rowcount = 0) THEN
			   BEGIN
			    INSERT INTO PROJ_TRACKER_FORECAST_LOCKS(SITE_PROJECTS_ID,'||N.FIELD_NAME||',LAST_MODIFIED_BY,LAST_MODIFIED_DATE)
			    VALUES(AX.SITE_PROJECTS_ID,AX.'||N.FIELD_NAME||',AX.LAST_MODIFIED_BY,SYSDATE);
			   END;
			   v_rowcount := 0;
			   END IF;
			   END LOOP;
			   END;';
	DBMS_OUTPUT.PUT_LINE('v_qryStatement');
	DBMS_OUTPUT.PUT_LINE(v_qryStatement);
	BEGIN
	    EXECUTE IMMEDIATE v_qryStatement;
	    COMMIT;
	EXCEPTION
	    WHEN OTHERS
	    THEN dbms_output.put_line('forecast table save error');
	END;
    END LOOP;
	BEGIN
        dbms_output.put_line('inside PROJ_TRACKER_FORECAST_LOCKS');
	    UPDATE PROJ_TRACKER_FORECAST_LOCKS
			SET STATUS = 'QUEUED',
			LAST_MODIFIED_BY = userId,
			LAST_MODIFIED_DATE = SYSDATE
			WHERE SITE_PROJECTS_ID = siteProjectsId;
			COMMIT;
	EXCEPTION
	    WHEN OTHERS
	       THEN dbms_output.put_line('forecast cal error');
	END;
     FOR F IN(SELECT FIELD_NAME,TABLE_NAME
	     FROM FUZE_TRACKER_FIELD_CONFIG
	     WHERE FIELD_NAME in (select regexp_substr(v_keysList,'[^,]+', 1, level) from dual
								connect by regexp_substr(v_keysList, '[^,]+', 1, level) is not null)
	     AND MODULE IN ('TRANSPORT') AND FIELD_NAME = 'MSC'
	     ) LOOP       
        IF(F.TABLE_NAME IN ('PROJ_TRANSPORT_ATTRIBUTES') AND F.FIELD_NAME = 'MSC') THEN
        PROC_SYNC_SITE_TRANSPORT_ATTRIBUTES_FIELDS(siteProjectsId);
        END IF;
--        IF(F.TABLE_NAME IN ('PROJ_TRANSPORT_ATTRIBUTES')) THEN
--         PROC_UPDATE_TRANSPORT_MILESTONE_DATES(siteProjectsId,'TRANSPORT_CONTRACT','COMPLETED',userId);
--         PROC_UPDATE_TRANSPORT_MILESTONE_DATES(siteProjectsId,'TRANSPORT_DELIVERY','COMPLETED',userId);
--        END IF;
        END LOOP;

 --Transport_enhancement      

--        FOR T IN(SELECT FIELD_NAME,TABLE_NAME
--	     FROM FUZE_TRACKER_FIELD_CONFIG
--	     WHERE FIELD_NAME in (select regexp_substr(v_keysList,'[^,]+', 1, level) from dual
--								connect by regexp_substr(v_keysList, '[^,]+', 1, level) is not null)
--	     AND MODULE IN ('SPM') AND FIELD_NAME IN ('MICROWAVE_CONST_BID_AWARDED_AC_DT','MICROWAVE_DONOR_BW_UPGRADE_FOC_AC_DT','MICROWAVE_EQUIP_ORD_AC_DT','MICROWAVE_EQUIP_RCVD_AC_DT',
--        'MICROWAVE_CONST_BID_INITIATED_AC_DT')
--	     ) LOOP       
--        IF(T.TABLE_NAME IN ('SPM_PROJECT_TRACKER') AND T.FIELD_NAME IN ('MICROWAVE_CONST_BID_AWARDED_AC_DT','MICROWAVE_DONOR_BW_UPGRADE_FOC_AC_DT','MICROWAVE_EQUIP_ORD_AC_DT','MICROWAVE_EQUIP_RCVD_AC_DT',
--        'MICROWAVE_CONST_BID_INITIATED_AC_DT')) THEN
--        select GREATEST(MICROWAVE_CONST_BID_AWARDED_AC_DT,MICROWAVE_DONOR_BW_UPGRADE_FOC_AC_DT,MICROWAVE_EQUIP_ORD_AC_DT,MICROWAVE_EQUIP_RCVD_AC_DT,
--        MICROWAVE_CONST_BID_INITIATED_AC_DT) INTO v_microwaveCompletedDate from SPM_PROJECT_TRACKER WHERE FUZE_PROJECT_ID = siteProjectsId;
--        IF(v_microwaveCompletedDate is not null and v_microwaveCompletedDate != '01/01/1900')then
----        PROC_UPDATE_TRANSPORT_MILESTONE_DATES(siteProjectsId,'MICROWAVE','COMPLETED',userId);  
--         PROC_INSERT_PROJ_TASKS(siteProjectsId,0,0,'MICROWAVE_INSERT','COMPLETE','COMPLETED','',userId);
--         elsif (v_microwaveCompletedDate is null)then
--         PROC_INSERT_PROJ_TASKS(siteProjectsId,0,0,'MICROWAVE_INSERT','COMPLETE','ACTIVE','',userId);
--         END IF;
--        END IF;
--     END LOOP;

 --Transport_enhancement

END;
