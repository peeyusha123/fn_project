
<div class="col-xs-12 col-sm-12 col-md-12 margin-top mobile-padding-left-right-0 ipad-padding-left-right-0 ight-0">
    <label class="col-sm-5 col-xs-12 col-md-5 padding-left-right-zero opt-label">Date Submitted to Environmental Compliance: </label>
    <div class="col-xs-12 col-sm-7 col-md-7 padding-zero">
        <div class="date-picker">
            <input id="env_submit_territory_date" type="text" close-text="Close" data-provide="datepicker" datepicker-popup="dd-MMM-yyyy" class="col-xs-12 datepicker form-control-spm env-submit-territory-date" aria-required="false" aria-invalid="false" data-toggle="tooltip" data-placement="top" data-original-title="Date Submitted to Environmental Compliance">
            <span class="input-group-btn">
            </span>
        </div>
    </div>
</div>








<div class="col-xs-12 col-sm-12 col-md-6 action-items_documents padding-right-zero ipad-padding-left-0 mobile-padding-left-0 margin-top update-mode-only">
			<h5 class="text-brand-red margin-top-zero padding-left padding-sm">Document Upload</h5>
			<div class="col-sm-12 padding-zero margin-top-bottom">
				<div class="custom-file-upload">
					<label class="lbl-file-upload">
						<i class="fa fa-upload fa-bold vertical-align-middle padding-right padding-xs" aria-hidden="true"></i> 
						Drag File Here / Click Here To Upload
					</label>
					<form method="post" id="@TASK_action-item-upload-form" enctype="multipart/form-data" action="service/invoke/upload" target="upload-target" class="upload-form deep-fetch">
						<input class="action-item-docs" name="refNum" id="refNumDocuments" value="" type="hidden">
						<c:choose>
							<c:when test="${param.formType == 'SITE'}">
								<input class="action-item-docs" name="refType" id="refType" value="SITE_ACTION_ITEM_DOCS" type="hidden">
							</c:when>
							<c:otherwise>
								<input class="action-item-docs" name="refType" id="refType" value="PROJ_ACTION_ITEM_DOCS" type="hidden">
							</c:otherwise>
						</c:choose>
						<input class="action-item-docs" name="service" id="service" value="" type="hidden"> <input class="action-item-docs" name="category" id="category" value="actionitems" type="hidden">
						<input class="action-item-docs" name="subCategory" id="subCategory" value="" type="hidden">
						<c:choose>
							<c:when test="${param.formType == 'SITE'}">
								<input class="action-item-docs" name="description" id="description" value="Site Action Items Documents" type="hidden">
							</c:when>
							<c:otherwise>
								<input class="action-item-docs" name="description" id="description" value="Action Items Documents" type="hidden">
							</c:otherwise>
						</c:choose>
						<input class="action-item-docs" name="siteInfoJSON" id="siteInfoJSONDocuments" value="" type="hidden"> 
						<input class="action-item-docs" name="uri" id="uri" value="document-gateway/document-service/document/documentUpload" type="hidden">
						<iframe name="upload-target" id="upload-target" style="display: none;" onload=""></iframe>
						<!-- SPM GUI Fortify often misused file upload vulnerability fix -->
						<input class="action-item-docs col-md-8 btn btn-default btn-sm input-field padding-right-zero padding-left auto-upload-doc" data-table="#@TASK_action-item-upload-table" name="file" id="browse-files" type="${applicationScope.ContextCache.projectServiceSettings['guiConstants']['FILE_TYPE']}">
						<!-- SPM GUI Fortify often misused file upload vulnerability fix -->
					</form>
				</div>
			</div>
		</div>
	</div>



............
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/fmt" prefix="fmt" %>

<form action="uploadDocument" method="post" enctype="multipart/form-data">
    <div>
        <label>Does the signal extend into the country at levels specified in the Agreement between The FCC and their counterpart?</label>
        &nbsp;
        <input name="signalExtend" role="radio" data-reg-service="VZREGSERVICE" value="yes" id="signalExtendYes" type="radio">
        <label for="signalExtendYes">Yes</label>
        <input name="signalExtend" role="radio" data-reg-service="VZREGSERVICE" value="no" id="signalExtendNo" type="radio" checked>
        <label for="signalExtendNo">No</label>
    </div>

    <div id="notificationTimeoutDiv" class="hidden">
        <label for="notificationTimeout">Notification Timeout Date</label>
        <input type="date" id="notificationTimeout" name="notificationTimeout">
    </div>

    <div id="agreementTimeoutDiv" class="hidden">
        <label for="agreementTimeout">Agreement Timeout Date</label>
        <input type="date" id="agreementTimeout" name="agreementTimeout">
    </div>

    <div>
        <label>Upload Agreement/Notification</label>
        <div class="custom-file-upload vertical-align-middle">
            <div class="margin-top-bottom">
                <input type="file" name="fileUpload" class="file-upload" accept=".doc, .docx, .pdf">
            </div>
            <input type="hidden" name="category" id="category" value="projects">
            <input type="hidden" name="subCategory" id="subCategory" value="INTERNATIONAL BORDER DOC">
            <input type="hidden" name="description" id="description" value="General Documents">
            <input type="hidden" name="uri" id="uri" value="document-gateway/document">
        </div>
        <button type="submit" class="btn btn-danger">Upload Document</button>
    </div>
</form>



...........
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Modal Example</title>
  <style>
    /* Style for the modal */
    .modal {
      display: none;
      position: fixed;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      padding: 20px;
      background-color: #fff;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      z-index: 1000;
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 10px;
    }

    .modal label {
      text-align: right;
      padding-right: 10px;
    }

    .modal input,
    .modal select {
      width: 100%;
      box-sizing: border-box;
      padding: 5px;
    }

    .modal button {
      grid-column: span 2;
      margin-top: 10px;
    }

    /* Style for the grid */
    .data-grid {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
      gap: 10px;
      margin-top: 20px;
    }
  </style>
</head>
<body>

<!-- Button to open the modal -->
<button onclick="openModal()">Open Modal</button>

<!-- The Modal -->
<div id="myModal" class="modal">
  <label for="age">Age:</label>
  <input type="number" id="age" name="age" required>

  <label for="date">Date:</label>
  <input type="date" id="date" name="date" required>

  <label for="organization">Organization:</label>
  <select id="organization" name="organization">
    <option value="company1">Company 1</option>
    <option value="company2">Company 2</option>
    <option value="company3">Company 3</option>
    <!-- Add more options as needed -->
  </select>

  <button onclick="saveData()">Save</button>
</div>

<!-- Data Grid -->
<div class="data-grid" id="dataGrid"></div>

<script>
  // Function to open the modal
  function openModal() {
    const modal = document.getElementById('myModal');
    modal.style.display = 'block';
  }

  // Function to save data and print request payload
  function saveData() {
    const age = document.getElementById('age').value;
    const date = document.getElementById('date').value;
    const organization = document.getElementById('organization').value;

    // Dummy endpoint - Replace with your actual endpoint
    const dummyEndpoint = 'https://example.com/api/saveData';

    // Dummy API call for demonstration
    fetch(dummyEndpoint, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ age, date, organization }),
      mode: 'cors', // Add this line for cross-origin requests
    })
      .then(response => response.json())
      .then(data => {
        console.log('Response from server:', data);
        // Display saved data in the grid
        displayDataGrid(data);
        // Close the modal after saving data
        document.getElementById('myModal').style.display = 'none';
      })
      .catch(error => console.error('Error:', error));
  }

  // Function to display saved data in the grid
  function displayDataGrid(data) {
    const dataGrid = document.getElementById('dataGrid');
    
    // Clear previous data
    dataGrid.innerHTML = '';

    // Add new data to the grid
    Object.keys(data).forEach(key => {
      const cell = document.createElement('div');
      cell.textContent = `${key}: ${data[key]}`;
      dataGrid.appendChild(cell);
    });
  }
</script>

</body>
</html>
