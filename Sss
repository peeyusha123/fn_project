//p1.html..
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="p2.css" />

    <title>Login Page</title>
  </head>
  <body>
    <form id="loginForm">
      <label for="username">Username:</label>
      <input
        type="text"
        id="newUsername"
        placeholder="Enter the User Name"
        autocomplete="newUsername"
      />

      <label for="password">Password:</label>
      <input
        type="password"
        id="newPassword"
        placeholder="Enter the Password"
        autocomplete="newPassword"
      />

      <button type="button" id="submitBtn" disabled>Submit</button>
      <button type="button" id="resetBtn" style="display: none">Reset</button>
      <button type="button" id="signupBtn" onclick="openSignUpModal()">
        Sign Up
      </button>

      <button
        type="button"
        class="resetPasswordBtn"
        onclick="openResetPasswordModal()"
      >
        Password Reset
      </button>
    </form>

    <div id="signUpModalContainer"></div>
    <div id="signUpModal" class="modal">
      <div class="modal-content">
        <span class="close" onclick="closeSignUpModal()">&times;</span>
        <h2>Sign Up</h2>
        <form id="signUpForm">
          <label for="signupUsername">Username:</label>
          <input
            type="text"
            id="signupUsername"
            placeholder="Enter the User Name"
            autocomplete="signupUsername"
          />

          <label for="signupPassword">Password:</label>
          <input
            type="password"
            id="signupPassword"
            placeholder="Enter the Password"
            autocomplete="signupPassword"
          />

          <button
            type="button"
            id="signupSubmitBtn"
            onclick="submitSignUpForm()"
          >
            Submit
          </button>
          <button type="button" id="signupResetBtn" onclick="resetSignUpForm()">
            Reset
          </button>
          <button type="button" id="resetStorageBtn">Reset Storage</button>
        </form>
      </div>
    </div>
    <div id="passwordResetModal" class="modal">
      <div class="modal-content">
        <span class="close" onclick="closePasswordResetModal()">&times;</span>
        <h2>Password Reset Modal</h2>
        <form id="passwordResetForm">
          <!-- Non-editable username -->
          <p>Username: <span id="modalUsername"></span></p>

          <!-- New Password Input -->
          <label for="newPassword">New Password:</label>
          <input
            type="password"
            id="newPassword"
            placeholder="Enter new password"
            autocomplete="new-password"
          />

          <!-- Retype New Password Input -->
          <label for="retypePassword">Retype New Password:</label>
          <input
            type="password"
            id="retypePassword"
            placeholder="Retype new password"
            autocomplete="new-password"
          />

          <!-- Submit Button -->
          <button type="button" onclick="submitPasswordReset()">Submit</button>
        </form>
      </div>
    </div>
    <script defer src="p3.js"></script>
    <script defer src="p4.js"></script>
  </body>
</html>


//p4.js...
// Function to open the password reset modal
function openResetPasswordModal() {
  const resetPasswordModal = document.getElementById("resetPasswordModal");
  resetPasswordModal.style.display = "block";

  // Add event listener to the input field for real-time validation
  const resetUsernameInput = document.getElementById("resetUsername");
  resetUsernameInput.addEventListener("input", handleResetUsernameInputChange);

  // Initially disable the Reset Buttons
  const resetPasswordBtns = document.querySelectorAll(".resetPasswordBtn");
  resetPasswordBtns.forEach((btn) => {
    btn.disabled = true;
  });
}

// Function to close the password reset modal
function closeResetPasswordModal() {
  const resetPasswordModal = document.getElementById("resetPasswordModal");
  resetPasswordModal.style.display = "none";
}

// Function to handle input change in the Reset Username field
function handleResetUsernameInputChange() {
  const resetUsernameInput = document.getElementById("resetUsername");
  const resetPasswordBtns = document.querySelectorAll(".resetPasswordBtn");

  // Enable the Reset Buttons only if the Reset Username field is not empty
  const isUsernameEmpty = !resetUsernameInput.value.trim();
  resetPasswordBtns.forEach((btn) => {
    btn.disabled = isUsernameEmpty;
  });

  // Check if the entered username is present in Local Storage
  const enteredUsername = resetUsernameInput.value.trim();
  // Validation: Ensure that special characters are not present
  const containsSpecialCharacters = /[!@#$%^&*(),.?":{}|<>]/.test(
    enteredUsername
  );

  if (containsSpecialCharacters) {
    console.log("Special characters are not allowed in the username");
    // Optionally, you can clear the input field or display an error message
    resetUsernameInput.value = "";
  } else {
    console.log("Username is valid:", enteredUsername);
  }
  const storedUsernames = JSON.parse(localStorage.getItem("usernames")) || [];

  const isUsernameInLocalStorage = storedUsernames.includes(enteredUsername);

  if (isUsernameInLocalStorage) {
    console.log("Username found in Local Storage:", enteredUsername);
  } else {
    console.log("Username not found in Local Storage:", enteredUsername);

    // If the username is not found, you can add it to Local Storage
    storedUsernames.push(enteredUsername);
    localStorage.setItem("usernames", JSON.stringify(storedUsernames));

    console.log("Username added to Local Storage:", enteredUsername);
  }
}

// Function to open the password reset modal with non-editable fields
function openPasswordResetModal() {
  const passwordResetModal = document.getElementById("passwordResetModal");
  const modalUsername = document.getElementById("modalUsername");
  const newPasswordInput = document.getElementById("newPassword");
  const retypePasswordInput = document.getElementById("retypePassword");

  // Set non-editable username
  modalUsername.textContent = username;

  // Clear input fields
  newPasswordInput.value = "";
  retypePasswordInput.value = "";

  // Open the modal
  passwordResetModal.style.display = "block";
}

// Function to close the password reset modal
function closePasswordResetModal() {
  const passwordResetModal = document.getElementById("passwordResetModal");
  passwordResetModal.style.display = "none";
}
