CREATE OR REPLACE PROCEDURE DeleteUserDetailsAndLocation(
   p_userID IN NUMBER
)
IS
BEGIN
   -- Delete from USER_LOCATION_DETAILS
   DELETE FROM your_schema.USER_LOCATION_DETAILS WHERE user_id = p_userID;

   -- Delete from USER_DETAILS
   DELETE FROM your_schema.USER_DETAILS WHERE user_id = p_userID;

   DBMS_OUTPUT.PUT_LINE('User details and location deleted for user ID: ' || p_userID);
END DeleteUserDetailsAndLocation;
/




-- Disable constraints
ALTER TABLE your_schema.USER_LOCATION_DETAILS DISABLE CONSTRAINT constraint_name;
ALTER TABLE your_schema.USER_DETAILS DISABLE CONSTRAINT constraint_name;

-- Execute the procedure
BEGIN
   DeleteUserDetailsAndLocation(p_userID => 1);
END;
/

-- Enable constraints
ALTER TABLE your_schema.USER_LOCATION_DETAILS ENABLE CONSTRAINT constraint_name;
ALTER TABLE your_schema.USER_DETAILS ENABLE CONSTRAINT constraint_name;


SELECT constraint_name
FROM all_constraints
WHERE r_constraint_name IN (
    SELECT constraint_name
    FROM all_constraints
    WHERE table_name = 'USER_DETAILS'
);


SELECT constraint_name, table_name, column_name
FROM all_cons_columns
WHERE constraint_name IN (
    SELECT constraint_name
    FROM all_constraints
    WHERE r_constraint_name IN (
        SELECT constraint_name
        FROM all_constraints
        WHERE table_name = 'USER_DETAILS'
    )
);

new...
CREATE OR REPLACE FUNCTION IsUserIDExists(p_userID IN NUMBER) RETURN BOOLEAN
IS
   v_userExists BOOLEAN;
BEGIN
   SELECT 1 INTO v_userExists FROM USER_DETAILS WHERE user_id = p_userID;
   RETURN TRUE;
EXCEPTION
   WHEN NO_DATA_FOUND THEN
      RETURN FALSE;
END IsUserIDExists;
/


DECLARE
   v_result BOOLEAN;
BEGIN
   v_result := IsUserIDExists(p_userID => 1);
   DBMS_OUTPUT.PUT_LINE('User ID exists: ' || v_result);
END;
/



CREATE OR REPLACE TRIGGER UserDetailsHistoryTrigger
AFTER INSERT OR UPDATE ON USER_DETAILS
FOR EACH ROW
BEGIN
   INSERT INTO USER_DETAILS_HISTORY (user_id, old_value, new_value, changed_by_user_id)
   VALUES (:NEW.user_id, NULL, :NEW.username, :NEW.user_id);
END;
/

CREATE OR REPLACE TRIGGER UserLocationDetailsHistoryTrigger
AFTER INSERT OR UPDATE ON USER_LOCATION_DETAILS
FOR EACH ROW
BEGIN
   INSERT INTO USER_DETAILS_HISTORY (user_id, old_value, new_value, changed_by_user_id)
   VALUES (:NEW.user_id, NULL, :NEW.city || ', ' || :NEW.state, :NEW.user_id);
END;
/


<div class="col-xs-12 col-sm-6 col-md-6 text-bold border-none padding-right-zero mobile-padding-left-0"> In State GC?</div>
<div class="col-xs-12 col-sm-6 col-md-6 padding-zero">
    <div class="select_picklist opt-field padding-left-right-zero display-flex national_fields">
        <select class="col-xs-12 col-md-12 mandatory-field form-control-spm in-state-gc padding-right" data-original-title="In State GC?" 
            <c:if test="${milestoneStatus != 'N/A' && (siteAddressState == 'MA' || siteAddressState == 'CT' || siteAddressState == 'RI')}">
                required
            </c:if>
        >
            <option value="">Nothing Selected</option>
            <option value="Yes">Yes</option>
            <option value="No">No</option>
        </select>
    </div>
</div>

<div class="col-xs-12 col-sm-6 col-md-6 text-bold border-none padding-right-zero mobile-padding-left-0"> Tax Bond Certificate Uploaded (F)/(A)</div>
<div class="col-xs-12 col-sm-6 col-md-6 padding-zero">
    <div class="display-flex single_date opt-field padding-left-right-zero national_fields">
        <div class="date-picker opt-date-picker col-sm-6 padding-left-right-zero display-flex border-left opt-single-date-section opt-content-section col-xs-6">
            <input id="taxBondCertUploadedFcDt" type="text" data-toggle="tooltip" data-placement="top" data-original-title="Tax Bond Certificate Uploaded Forecast Date" close-text="Close" data-provide="datepicker" datepicker-popup="dd-MMM-yyyy" class="disable datepicker taxBondCertUploadedFcDt nf_disable form-control input-sm border-zero padding-right-zero background-image-none" aria-required="false" aria-invalid="false" value=""/>
            <span class="input-group-btn">
                <button type="submit" id="btn-date-picker" class="btn btn-default btn-xs" tabindex="0">
                    <span class="vz-icon-today"></span>
                </button>
            </span>
            <b class="fa fa-check-circle opt_icon opt_field_check_green border-zero disable nf_disable"></b>
        </div>
        <div class="date-picker opt-date-picker col-sm-6 padding-left-right-zero display-flex border-left opt-actual-section">
            <input id="taxBondCertUploadedAcDt" type="text" data-toggle="tooltip" data-placement="top" data-original-title="Tax Bond Certificate Uploaded Actual Date" close-text="Close" data-provide="datepicker" datepicker-popup="dd-MMM-yyyy" class="disable datepicker taxBondCertUploadedAcDt nf_disable form-control input-sm border-zero padding-right-zero background-image-none" aria-required="false" aria-invalid="false" value="" 
            <c:if test="${milestoneStatus != 'N/A' && (siteAddressState == 'MA' || siteAddressState == 'CT' || siteAddressState == 'RI') && inStateGC == 'No'}">
                required
            </c:if>
            />
            <span class="input-group-btn">
                <button type="submit" id="btn-date-picker" class="btn btn-default btn-xs" tabindex="0">
                    <span class="vz-icon-today"></span>
                </button>
            </span>
            <b class="fa fa-check-circle opt_icon opt_field_check_green border-zero disable nf_disable"></b>
        </div>
    </div>
</div>
