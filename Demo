Simplified Description and Acceptance Criteria

Description

Currently, when a new project is created, utility information is duplicated instead of being inherited from the site. Each new project entry creates a new utility ID, leading to unnecessary duplication.

Expected behavior:

The project's utility information should be the same as the site's utility information.

Utilities should not be duplicated when a new project is created.

If the site’s utility information is incomplete, an error should be shown when creating a new project.


Acceptance Criteria

AC-1:
Given a new project is created,
When the API request is made,
Then the project's utility information should come from the site's utility data without duplication.

AC-2:
Given a site has incomplete utility information,
When a new project is created,
Then an error message should be displayed indicating missing utility information.

This simplified version should help you generate clear test cases. Let me know if you need further refinements!













As an Equipment Engineer, I want to receive real-time notifications about the status of the path creation process (Success, Failure, or Manual Intervention) so that I can track progress, take necessary actions, and ensure the smooth execution of workflows.

The path creation process is triggered after the successful creation of equipment in the CND application. If the process completes successfully, a success notification is sent to the user. If the process encounters an error, a failure notification is sent with details. If manual intervention is required, a notification with a redirect link is provided for further action.

The system should ensure that notifications are sent within 5 seconds of the workflow reaching a terminal state (Success, Failure, or Manual Intervention). Additionally, any failures should trigger automated retries where applicable.

Acceptance Criteria

AC-1 (Success Notification):

Given the path creation process completes successfully,

When the workflow finishes,

Then the user receives a success notification within 5 seconds.


AC-2 (Manual Intervention Notification):

Given the workflow encounters a condition requiring manual intervention,

When the system identifies this condition,

Then the user receives a notification with a redirect link within 5 seconds.


AC-3 (Failure Notification):

Given the path creation process encounters an error,

When the workflow fails,

Then the user receives a failure notification with error details within 5 seconds.



The system must ensure high reliability in API integration, minimize notification delays, and provide accurate status updates to maintain an efficient workflow for the Equipment Engineer.








Detailed Description for SARF SITE Management Feature

Objective

The SARF SITE management feature enables GUI SUPPORT users to view and update SARF SITE values for different sites. This functionality is crucial for maintaining accurate site data and ensuring proper classification of sites within the system. Users can:

Search for site details (including SARF SITE values).

Update SARF SITE values for individual sites.

Update both SARF SITE and site status together.

Perform bulk updates to modify multiple sites in a single request.

Ensure data security by restricting updates to authorized users only.


This feature interacts with two key APIs:

1. getCandidateSites API – Retrieves site details, including SARF SITE value.


2. updateSarfSite API – Updates the SARF SITE value (YES/NO) and can modify the site status.




---

Feature Behavior

1. Fetching Site Details

The system allows users to search for sites using siteProjectsId and status.

The API response includes Site ID, Site Name, MDG Location ID, Market, SARF SITE value, and other details.

If a site exists, it returns the current SARF SITE value (YES/NO).

If no matching site is found, the API responds with an appropriate message.



2. Updating SARF SITE Value

Users can modify SARF SITE from YES to NO or vice versa using the updateSarfSite API.

The system updates the value in the database and confirms the change in the API response.

Only authorized users with the GUI SUPPORT role can make changes.



3. Updating SARF SITE and Site Status Together

Users can modify both SARF SITE and site status in a single request.

The system ensures that both values are updated in the database at the same time.

The API response reflects the updated values.



4. Bulk Updates for Multiple Sites

Users can submit multiple site updates in a single request.

The system processes all updates and returns a success or failure status for each site.

If one or more updates fail, the API provides a partial success message detailing the affected sites.



5. Security & Access Control

Only users with the GUI SUPPORT role can modify SARF SITE values.

Unauthorized access attempts result in a 403 Forbidden error.

Sensitive site details are protected, and only necessary information is exposed in API responses.





---

Acceptance Criteria

AC-1: Fetching Site Details

✅ When a GUI SUPPORT user searches for a site using getCandidateSites, the API must return the correct site details, including SARF SITE value.
✅ The API response must match the actual database records for the site.
✅ If an invalid siteProjectsId is provided, the system must return an error message instead of incorrect data.

AC-2: Updating SARF SITE Value

✅ When a GUI SUPPORT user updates a site's SARF SITE value, the new value must be stored in the database and reflected in API responses.
✅ The system must allow only valid SARF SITE values (YES/NO) and reject any invalid input.
✅ If an unauthorized user attempts to update SARF SITE, the system must return a 403 Forbidden error.

AC-3: Updating SARF SITE and Site Status Together

✅ When a user updates both SARF SITE and site status, the system must process both changes simultaneously.
✅ The database must accurately reflect the new SARF SITE and status values after the update.
✅ If an invalid status value is provided, the update must fail with a validation error.

AC-4: Bulk Updates for Multiple Sites

✅ The system must allow users to update multiple sites in a single request.
✅ The API response must indicate which updates were successful and which failed, with proper error messages.
✅ The system must enforce a limit on maximum sites per bulk update request to prevent performance issues.

AC-5: Data Security & Access Control

✅ Only GUI SUPPORT users should be able to update SARF SITE values.
✅ Unauthorized users attempting updates must receive a 403 Forbidden error.
✅ The system must protect sensitive site information and ensure only relevant fields are returned in API responses.


---

This document provides a deep functional breakdown of the feature and defines strict acceptance criteria to ensure reliable testing and validation. Let me know if you need any refinements!

















Description:

The Admin Page for GUI SUPPORT users enables users to search for a site, view its details, and update the SARF SITE value using a YES/NO dropdown. This functionality ensures data accuracy, security, and controlled access for managing SARF SITE information.

The page includes the following fields:

SARF SITE (Editable – Dropdown: YES/NO/Blank)

Site ID (Read-Only – Hyperlinked to Site Page)

Site Name (Read-Only)

MDG Location ID (Read-Only)

Market (Read-Only)

Sub-Market (Read-Only)

Site Status (Read-Only)

Site Type (Read-Only)

Site Sub-Type (Read-Only)


Users can:

1. Search for a site using Site ID and view the site details, including the SARF SITE value.


2. Update the SARF SITE value from YES to NO or vice versa.


3. Update both the SARF SITE and Site Status in a single request.


4. Perform bulk updates on multiple sites at once.



The system ensures:

Proper authorization and role-based access control for GUI SUPPORT users.

Data validation and integrity checks to prevent incorrect updates.

Audit logging and monitoring of all SARF SITE changes.



---

Acceptance Criteria:

1. Site Search Functionality:

✅ GIVEN a GUI SUPPORT user, WHEN searching for a site using Site ID, THEN site details, including the SARF SITE value, are displayed.



2. SARF SITE Value Update:

✅ GIVEN a GUI SUPPORT user, WHEN updating the SARF SITE value from YES to NO, THEN the new value is saved and reflected in the database.



3. Simultaneous Update of SARF SITE & Site Status:

✅ GIVEN a GUI SUPPORT user, WHEN updating both the SARF SITE value and Site Status in a single request, THEN both values are updated successfully in the database.



4. Bulk Update Functionality:

✅ GIVEN a GUI SUPPORT user, WHEN updating multiple sites in one request, THEN all selected sites are updated successfully.



5. Security & Access Control:

✅ GIVEN a GUI SUPPORT user, WHEN performing site updates, THEN only authorized users can access and modify SARF SITE values.



6. Data Validation & Integrity:

✅ GIVEN an invalid or incorrect update request, WHEN submitted, THEN the system should return an appropriate error message without updating the data.





---

This version provides a clear description and acceptance criteria without a demo. Let me know if you need further modifications.














Here’s a more structured and grammatically refined version of your description:


---

Description:

The user navigates to the Admin Page and selects Admin Operations. Within the Admin Operations section, the user selects Document Routing, where two options are available:

1. Template List


2. Create/Edit Template



The user selects Create/Edit Template, fills in the required fields, and successfully creates a template. The created template is then verified in the Template List to ensure its visibility.

Next, the user selects a Project ID, which opens the Project Page. Within the project, a specific Milestone is selected, and the user attempts to upload documents. After uploading, the user verifies that the document appears on the Milestone Page. Additionally, the Document Routing icon is checked to confirm whether the uploaded document is in Jeopardy status.


---

Acceptance Criteria:

1. The user can navigate to the Admin Page and access the Document Routing section.


2. The Create/Edit Template functionality allows users to input required fields and create a template successfully.


3. The created template appears in the Template List after creation.


4. The user can select a Project ID and access the Project Page.


5. Within the Project Page, a Milestone can be selected to upload a document.


6. The uploaded document is visible on the Milestone Page after a successful upload.


7. The Document Routing icon correctly reflects the document’s Jeopardy status, if applicable.



Let me know if you need any further refinements!
















Title: US-6-Upgrade Service to Java17 - Development, Configuration, & Deployment Jobs for Document Routing Service

Description:
This test verifies the functionality of the document routing service after upgrading to Java 17. It includes testing template creation, document upload, and visibility in the milestone and document routing section.

Test Steps:

1. Navigate to the Admin tab and create a new template with required details.


2. Ensure the template appears in the template list.


3. Go to the Modifications Project section and select the project associated with the created template.


4. Upload documents to the selected project.


5. Verify that the uploaded documents appear in the milestone section.


6. Ensure the documents are visible in the Document Routing section.



Expected Result:

The template is successfully created and listed in the template list.

The selected modifications project correctly reflects the template.

Uploaded documents appear in the milestone section.

Documents are visible in the Document Routing icon.


Let me know if you need any modifications!








Here’s the updated demo explanation, including the third test case.


---

Demo Explanation for "Source Site" Field on Site Page UI

1. Introduction

"Hello everyone, today I am going to demonstrate the addition of the "Source Site" field to the Site Page UI and the Tracker Module. This field corresponds to the backend SARF SITE field and displays either Yes/No or True/False. It has been placed under Site Status on the Site Page."


---

2. Step-by-Step Demo

Step 1: Verifying "Source Site" Field on Site Page UI

"I am opening the Site Page UI using the given UAT environment link to check if the Source Site field is displayed correctly under Site Status."

Test Case Reference (TC_01):

The Source Site field should be visible on the Site Page.

It should be placed directly under the Site Status field.

The field should display Yes/No or True/False based on the backend SARF SITE value.



Expected Result: The Source Site field appears correctly under Site Status and shows the expected values.


---

Step 2: Checking "Source Site" Field in the Tracker Module

"Now, I am checking if the Source Site field is also available in the Tracker Module."

Test Case Reference (TC_02):

The Source Site field should be present in the site module in Tracker.

The field should display the same Yes/No or True/False value as in the Site Page UI.

The value should match the backend SARF SITE field.



Expected Result: The Tracker Module correctly displays the Source Site field with the expected values, ensuring consistency with the Site Page UI.


---

Step 3: Querying the Backend to Validate Source Site Data

"Now, I am going to run a database query to check if the Source Site value is correctly stored in the backend."

Query:

SELECT site_id, site_status, sarf_site AS source_site  
FROM fuze_copy.site_info@fuze_uat_read  
WHERE site_id = 'SITE_ID';

Expected Result:

The Source Site field should match the SARF SITE value in the database.

The Yes/No or True/False values displayed on the UI should be the same as the data retrieved from this query.




---

3. Conclusion

"With this update, the Source Site field is now available in both the Site Page UI and the Tracker Module. The backend data is correctly stored and reflected on the UI, ensuring proper tracking of SARF SITE information. Thank you!"


---

This version includes the third test case query and keeps it clear and easy to explain. Let me know if you need modifications!

