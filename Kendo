// Function to handle input change in the Reset Username field
function handleResetUsernameInputChange() {
  const resetUsernameInput = document.getElementById("resetUsername");
  const resetPasswordBtns = document.querySelectorAll(".resetPasswordBtn");

  // Enable the Reset Buttons only if the Reset Username field is not empty

  const isUsernameEmpty = !resetUsernameInput.value.trim();
  const containsSpecialCharacters = /[!@#$%^&*(),.?":{}|<>]/.test(
    resetUsernameInput.value.trim()
  );

  resetPasswordBtns.forEach((btn) => {
    btn.disabled = isUsernameEmpty || containsSpecialCharacters;
  });

  // Check if the entered username is present in Local Storage
  const enteredUsername = resetUsernameInput.value.trim();
  if (containsSpecialCharacters) {
    console.log("Special characters are not allowed in the username");
    // Optionally, you can clear the input field or display an error message
    resetUsernameInput.value = "";
  } else {
    const storedUsernames = JSON.parse(localStorage.getItem("userList")) || [];
    const isUsernameInLocalStorage = storedUsernames.some(
      (user) => user.userName === enteredUsername
    );
    console.log("Username is valid:", enteredUsername);

    if (!isUsernameInLocalStorage) {
      storedUsernames.push({ userName: enteredUsername });
      localStorage.setItem("userList", JSON.stringify(storedUsernames));
    }

    openPasswordResetModal(enteredUsername);
  }
}
